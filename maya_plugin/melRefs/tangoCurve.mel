global int $currentTime;
global int $keyLeft;
global int $keyRight;
global float $inKeyTangent[];
global float $outTangent[];
global string $selectedNode;


global proc int drawEditCurve() {
	//print("createEditCurve is called");
	global string $selectedNode;
	string $cmd = "";
	global int $currentTime;
	global int $keyLeft;
	global int $keyRight;
	
	string $curvePoints = "";
	string $locatorPoints = "";
	int $stepSize = ($keyRight - $keyLeft) / 10;
	if($stepSize == 0) {
		return false;
	}

	int $i = 0;
	string $animCurves[] = `listConnections -type animCurve $selectedNode`;
	for($i = $keyLeft; $i < $keyRight; $i = $i + $stepSize) {
		float $pos[3] = `getAttr -time $i ($selectedNode + ".t")`;
		float $ori[3] = `getAttr -time $i ($selectedNode + ".r")`;

		$curvePoints = $curvePoints + " -p ";
		$curvePoints = ($curvePoints + " " + $pos[0] + " " + $pos[1] + " " + $pos[2]);
		string $locatorName = "tangoCurveLocator" + $i;
		//spaceLocator -p $pos[0] $pos[1] $pos[2] -n $locatorName;
		string $locators[] = `spaceLocator -n $locatorName`;
		setAttr ($locators[0] + ".t") $pos[0] $pos[1] $pos[2];
		setAttr ($locators[0] + ".r") $ori[0] $ori[1] $ori[2];

		$locatorPoints = $locatorPoints + " " + $locators[0];
		// setAttr `spaceLocator -n $locatorName`;
	}
	eval("group -n tangoLocators" + $locatorPoints + ";");
	if($curvePoints != "") {
		$cmd = ("curve " + $curvePoints + " -n tangoEditCurve;") ;
		eval($cmd);
		// group -n "tangoCurve" "tangoLocators" " 	tangoEditCurve";
		group -n tangoCurve tangoEditCurve tangoLocators;
	}
	return true;
}

global proc int getKeyFrames() {

	string $nodes[] = `ls -selection`;
	if(size($nodes) != 1) {
		return false;
	}
	
	global string $selectedNode;
	global int $currentTime;
	global int $keyLeft;
	global int $keyRight;

	$selectedNode = $nodes[0];
	print($selectedNode);
	string $animCurves[] = `listConnections -type animCurve $selectedNode`;
	
	// If no animation curves have been generated
	if(size($animCurves) < 1) {
		return false;
	}
	
	$currentTime = `currentTime -query`;
	print("\ncurrentTime:");
	print $currentTime;

	print($animCurves[0]);
	float $keyFrames[] = sort(`keyframe -q $animCurves[0]`);
	$keyLeft = int($keyFrames[0]);
	$keyRight = int($keyFrames[size($keyFrames)-1]);
	int $keyLeftFound = false;
	int $keyRightFound = false;
	for( $keyFrame in $keyFrames ) {
		if ( $keyFrame < $currentTime ) {
			$keyLeft = $keyFrame;
			$keyLeftFound = true;
		}
		if ( $keyFrame > $currentTime && $keyRightFound == false) {
			$keyRight = $keyFrame;
			$keyRightFound = true;
			break;
		}
	}
	print("\nstartTime:");
	print $keyLeft;
	print("endTime:");
	print $keyRight;
	return true;
}


global proc int getTangents() {
	//print("getAnimCurve is called");
    string $nodes[] = `ls -selection`;
	string $cmd = "";
	global int $currentTime;
	global int $keyLeft;
	global int $keyRight;
	global float $inKeyTangent[];
	global float $outTangent[];

	for ($node in $nodes)
	{
		$currentTime = `currentTime -query`;
		print("\ncurrentTime:");
		print $currentTime;
		
		//string $shapes[] = `listRelatives -shapes $node`;
		string $animCurves[] = `listConnections -type animCurve $node`;
		
		for ($animCurve in $animCurves) {
			string $query = `nodeType $animCurve`;
			
			if (0 == (strcmp("animCurveTL", $query))) {
				print($animCurve);
				float $keyFrames[] = sort(`keyframe -q $animCurve`);
				$keyLeft = int($keyFrames[0]);
				$keyRight = int($keyFrames[size($keyFrames)-1]);
				int $keyLeftFound = false;
				int $keyRightFound = false;
				for( $keyFrame in $keyFrames ) {
					if ( $keyFrame < $currentTime ) {
						$keyLeft = $keyFrame;
						$keyLeftFound = true;
					}
					if ( $keyFrame > $currentTime && $keyRightFound == false) {
						$keyRight = $keyFrame;
						$keyRightFound = true;
						break;
					}
				}
				
				print("\nstartTime:");
				print $keyLeft;
				print("endTime:");
				print $keyRight;
				

				// DO NOT CALCULATE TANGENTS HERE.
				// MOVE FOLLOWING CODE ELSEWHERE.
				$outTangent = `keyTangent -t $keyLeft -q -outAngle $animCurve`;
				print("\nLeft Key Out tangents:");
				print($outTangent);
				
				$inKeyTangent = `keyTangent -t $keyRight -q -inAngle $animCurve`;
				print("Right Key In tangents:");
				print($inKeyTangent);
				
			}
		}
	}
	//print("Tango is created by command");
	createEditCurve();
	return true;
}

global proc generateEditCurve() {
	if(`objExists tangoCurve`) {
		delete tangoCurve;
	}
	print("calling getKeyFrames");
	if(getKeyFrames()) {
		print("drawingeditcurve");
		drawEditCurve();

	}
}

// Create Tango Menu Items
global string $gMainWindow;
setParent $gMainWindow;

if(`menu -exists tangoMenu`) {
	deleteUI tangoMenu;
}
if(`menuItem -exists tangoCmdMenu`) {
	deleteUI tangoCmdMenu;
}
if(`menuItem -exists tangoNodeMenu`) {
	deleteUI tangoNodeMenu;
}

//print("Calling getAnimCurve");
menu -label "Tango Editor" -tearOff true tangoMenu;
menuItem -label "Curve Control" -command "generateEditCurve()" tangoCmdMenu;